git config --global user.name 'ahmad' открытие имени пользователя
git config --global user.email 'developer2594@gmail.com'
git config --list показывает настройки
git config --global core.autocrlf true для винды чтобы не было ошибок
git init сoздаёт папку .git
git status показывает статус проектов
git add 'имя файла' добавление в отслеживаемые
git add . добавление всех файлов в отслеживаемые
git commit -m 'имя комита'
git checkout -b 'имя новой ветки' создаст и перейдёт на новую ветку
git checkout 'name branch' переход на другую ветку
git remote add origin https://github.com/developer2594/portfolioEnd.git
git branch -M main создание ветки main
git push -u origin main отправка проекта на git

git clone и вставляем ссылку на проект в git для закачки на комп
git pull origin 'имя ветки' для закачка на комп ветку

gitk --all& открвает графический интерфейс git веток

git checkout master
git checkout crypto

=============================
git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]    
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]       
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:
=== Это общие команды Git, используемые в различных ситуациях:

start a working area (see also: git help tutorial)
=== запустить рабочую область (см. также: git help tutorial)
   clone     Clone a repository into a new directory
   === Клонировать репозиторий в новый каталог
   init      Create an empty Git repository or reinitialize an existing one
   === Создайте пустой репозиторий Git или повторно инициализируйте существующий.

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
=== растите, отмечайте и корректируйте свою общую историю
   branch    List, create, or delete branches
   === Список, создание или удаление ветвей
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   === Сменить ветку
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   === Извлечение из другого репозитория или локальной ветки и интеграция с ним
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.